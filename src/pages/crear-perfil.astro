---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import Footer from '../components/Footer.astro';
import { Camera, MapPin, Clock, Phone, Mail, Info, CheckCircle, ChevronLeft, ChevronRight, User, Calendar, FileText, AlertCircle } from 'lucide-astro';
---

<Layout title="Crear Perfil - Nadie Lo Sabrá">
  <Navbar />
  
  <main class="relative min-h-screen pt-[var(--navbar-height)]">
    <!-- Efectos de fondo -->
    <div class="absolute inset-0 overflow-hidden pointer-events-none">
      <div class="absolute top-20 -left-40 w-80 h-80 bg-accent/20 rounded-full filter blur-3xl opacity-70 animate-pulse"></div>
      <div class="absolute bottom-20 -right-40 w-80 h-80 bg-interactive/20 rounded-full filter blur-3xl opacity-70 animate-pulse"></div>
    </div>

    <div class="relative">
      <!-- Encabezado -->
      <div class="max-w-4xl mx-auto px-4 py-12 md:py-16 text-center">
        <a href="/anunciate-gratis" class="inline-flex items-center text-surface-light/70 hover:text-accent transition-colors mb-6 group">
          <ChevronLeft size={16} class="mr-2 group-hover:-translate-x-1 transition-transform" />
          <span>Volver a términos y condiciones</span>
        </a>
        
        <h1 class="text-3xl sm:text-4xl md:text-5xl font-display text-surface-light mb-6 leading-tight">
          Crea tu <span class="text-accent bg-gradient-to-r from-accent to-interactive bg-clip-text text-transparent">Perfil</span>
        </h1>
        
        <p class="text-surface-light/80 text-base md:text-lg max-w-2xl mx-auto leading-relaxed mb-8">
          Completa la información de tu perfil para comenzar a recibir contactos. Todos los campos marcados con * son obligatorios.
        </p>
        
        <!-- Indicador de progreso -->
        <div class="flex items-center justify-center gap-2 mb-12">
          <div class="w-3 h-3 rounded-full bg-accent"></div>
          <div class="w-16 h-1 bg-accent"></div>
          <div class="w-3 h-3 rounded-full bg-accent"></div>
          <div class="w-16 h-1 bg-surface-light/30"></div>
          <div class="w-3 h-3 rounded-full bg-surface-light/30"></div>
        </div>
      </div>

      <!-- Formulario de perfil -->
      <div class="max-w-4xl mx-auto px-4 mb-20">
        <form id="profile-form" class="glass-panel p-6 md:p-8 lg:p-10 rounded-xl shadow-xl shadow-black/10">
          <!-- Sección 1: Información básica -->
          <div class="mb-12">
            <h2 class="text-2xl font-display text-surface-light mb-6 flex items-center">
              <User size={24} class="text-accent mr-3" />
              Información Básica
            </h2>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8">
              <div>
                <label for="nombre-artistico" class="block text-surface-light mb-2 text-sm">Nombre Artístico *</label>
                <div class="relative">
                  <input 
                    type="text" 
                    id="nombre-artistico" 
                    name="nombre-artistico" 
                    required
                    class="w-full px-4 py-3 bg-black/20 border border-white/10 rounded-xl text-surface-light placeholder:text-surface-light/50 focus:ring-2 focus:ring-accent/50 focus:outline-none transition-all duration-300"
                    placeholder="Tu nombre artístico"
                  >
                  <div class="error-message hidden absolute -bottom-5 left-0 text-xs text-red-400 mt-1 flex items-center">
                    <AlertCircle size={12} class="mr-1" />
                    <span>Este campo es obligatorio</span>
                  </div>
                </div>
              </div>
              
              <div>
                <label for="fecha-nacimiento" class="block text-surface-light mb-2 text-sm">Fecha de Nacimiento *</label>
                <div class="relative">
                  <input 
                    type="date" 
                    id="fecha-nacimiento" 
                    name="fecha-nacimiento" 
                    required
                    min="1950-01-01"
                    max="2007-01-01"
                    class="w-full pl-12 pr-4 py-3 bg-black/20 border border-white/10 rounded-xl text-surface-light placeholder:text-surface-light/50 focus:ring-2 focus:ring-accent/50 focus:outline-none transition-all duration-300"
                  >
                  <span class="absolute left-4 top-1/2 -translate-y-1/2 text-accent">
                    <Calendar size={20} />
                  </span>
                  <div class="error-message hidden absolute -bottom-5 left-0 text-xs text-red-400 mt-1 flex items-center">
                    <AlertCircle size={12} class="mr-1" />
                    <span>Debes ser mayor de 18 años</span>
                  </div>
                </div>
                <p class="text-surface-light/60 text-xs mt-3">Debes ser mayor de 18 años</p>
              </div>
              
              <div>
                <label for="telefono" class="block text-surface-light mb-2 text-sm">Teléfono de Contacto *</label>
                <div class="relative">
                  <input 
                    type="tel" 
                    id="telefono" 
                    name="telefono" 
                    required
                    pattern="[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}"
                    class="w-full pl-12 pr-4 py-3 bg-black/20 border border-white/10 rounded-xl text-surface-light placeholder:text-surface-light/50 focus:ring-2 focus:ring-accent/50 focus:outline-none transition-all duration-300"
                    placeholder="+56 9 1234 5678"
                  >
                  <span class="absolute left-4 top-1/2 -translate-y-1/2 text-accent">
                    <Phone size={20} />
                  </span>
                  <div class="error-message hidden absolute -bottom-5 left-0 text-xs text-red-400 mt-1 flex items-center">
                    <AlertCircle size={12} class="mr-1" />
                    <span>Ingresa un número válido</span>
                  </div>
                </div>
                <p class="text-surface-light/60 text-xs mt-3">Este número no será visible públicamente</p>
              </div>
              
              <div>
                <label for="email" class="block text-surface-light mb-2 text-sm">Email *</label>
                <div class="relative">
                  <input 
                    type="email" 
                    id="email" 
                    name="email" 
                    required
                    class="w-full pl-12 pr-4 py-3 bg-black/20 border border-white/10 rounded-xl text-surface-light placeholder:text-surface-light/50 focus:ring-2 focus:ring-accent/50 focus:outline-none transition-all duration-300"
                    placeholder="tu@email.com"
                  >
                  <span class="absolute left-4 top-1/2 -translate-y-1/2 text-accent">
                    <Mail size={20} />
                  </span>
                  <div class="error-message hidden absolute -bottom-5 left-0 text-xs text-red-400 mt-1 flex items-center">
                    <AlertCircle size={12} class="mr-1" />
                    <span>Ingresa un email válido</span>
                  </div>
                </div>
                <p class="text-surface-light/60 text-xs mt-3">Para notificaciones y recuperación de cuenta</p>
              </div>
            </div>
          </div>
          
          <!-- Sección 2: Ubicación y disponibilidad -->
          <div class="mb-12">
            <h2 class="text-2xl font-display text-surface-light mb-6 flex items-center">
              <MapPin size={24} class="text-accent mr-3" />
              Ubicación y Disponibilidad
            </h2>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8">
              <div>
                <label for="region" class="block text-surface-light mb-2 text-sm">Región *</label>
                <div class="relative">
                  <select 
                    id="region" 
                    name="region" 
                    required
                    class="w-full px-4 py-3 bg-black/20 border border-white/10 rounded-xl text-surface-light focus:ring-2 focus:ring-accent/50 focus:outline-none appearance-none bg-select-arrow transition-all duration-300"
                  >
                    <option value="" disabled selected>Selecciona una región</option>
                    <option value="metropolitana">Región Metropolitana</option>
                    <option value="valparaiso">Valparaíso</option>
                    <option value="biobio">Biobío</option>
                    <option value="coquimbo">Coquimbo</option>
                    <option value="antofagasta">Antofagasta</option>
                    <!-- Más regiones aquí -->
                  </select>
                  <div class="error-message hidden absolute -bottom-5 left-0 text-xs text-red-400 mt-1 flex items-center">
                    <AlertCircle size={12} class="mr-1" />
                    <span>Selecciona una región</span>
                  </div>
                </div>
              </div>
              
              <div>
                <label for="comuna" class="block text-surface-light mb-2 text-sm">Comuna *</label>
                <div class="relative">
                  <select 
                    id="comuna" 
                    name="comuna" 
                    required
                    class="w-full px-4 py-3 bg-black/20 border border-white/10 rounded-xl text-surface-light focus:ring-2 focus:ring-accent/50 focus:outline-none appearance-none bg-select-arrow transition-all duration-300"
                    disabled
                  >
                    <option value="" disabled selected>Selecciona una comuna</option>
                  </select>
                  <div class="error-message hidden absolute -bottom-5 left-0 text-xs text-red-400 mt-1 flex items-center">
                    <AlertCircle size={12} class="mr-1" />
                    <span>Selecciona una comuna</span>
                  </div>
                </div>
              </div>
              
              <div>
                <label for="horario" class="block text-surface-light mb-2 text-sm">Horario de Atención *</label>
                <div class="relative">
                  <input 
                    type="text" 
                    id="horario" 
                    name="horario" 
                    required
                    class="w-full pl-12 pr-4 py-3 bg-black/20 border border-white/10 rounded-xl text-surface-light placeholder:text-surface-light/50 focus:ring-2 focus:ring-accent/50 focus:outline-none transition-all duration-300"
                    placeholder="Ej: Lunes a Viernes 10:00 - 20:00"
                  >
                  <span class="absolute left-4 top-1/2 -translate-y-1/2 text-accent">
                    <Clock size={20} />
                  </span>
                  <div class="error-message hidden absolute -bottom-5 left-0 text-xs text-red-400 mt-1 flex items-center">
                    <AlertCircle size={12} class="mr-1" />
                    <span>Este campo es obligatorio</span>
                  </div>
                </div>
              </div>
              
              <div>
                <label for="tipo-servicio" class="block text-surface-light mb-2 text-sm">Tipo de Servicio *</label>
                <div class="relative">
                  <select 
                    id="tipo-servicio" 
                    name="tipo-servicio" 
                    required
                    class="w-full px-4 py-3 bg-black/20 border border-white/10 rounded-xl text-surface-light focus:ring-2 focus:ring-accent/50 focus:outline-none appearance-none bg-select-arrow transition-all duration-300"
                  >
                    <option value="" disabled selected>Selecciona un tipo</option>
                    <option value="escort">Escort</option>
                    <option value="masajes">Masajes</option>
                    <option value="premium">Premium</option>
                    <option value="vip">VIP</option>
                  </select>
                  <div class="error-message hidden absolute -bottom-5 left-0 text-xs text-red-400 mt-1 flex items-center">
                    <AlertCircle size={12} class="mr-1" />
                    <span>Selecciona un tipo de servicio</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
          
          <!-- Sección 3: Descripción y fotos -->
          <div class="mb-12">
            <h2 class="text-2xl font-display text-surface-light mb-6 flex items-center">
              <FileText size={24} class="text-accent mr-3" />
              Descripción y Fotos
            </h2>
            
            <div class="space-y-8">
              <div>
                <label for="titulo-anuncio" class="block text-surface-light mb-2 text-sm">Título del Anuncio *</label>
                <div class="relative">
                  <input 
                    type="text" 
                    id="titulo-anuncio" 
                    name="titulo-anuncio" 
                    required
                    maxlength="70"
                    class="w-full px-4 py-3 bg-black/20 border border-white/10 rounded-xl text-surface-light placeholder:text-surface-light/50 focus:ring-2 focus:ring-accent/50 focus:outline-none transition-all duration-300"
                    placeholder="Un título atractivo para tu anuncio"
                  >
                  <div class="error-message hidden absolute -bottom-5 left-0 text-xs text-red-400 mt-1 flex items-center">
                    <AlertCircle size={12} class="mr-1" />
                    <span>Este campo es obligatorio</span>
                  </div>
                </div>
                <div class="flex justify-between mt-3">
                  <p class="text-surface-light/60 text-xs">Máximo 70 caracteres</p>
                  <p class="text-surface-light/60 text-xs"><span id="titulo-count">0</span>/70</p>
                </div>
              </div>
              
              <div>
                <label for="descripcion" class="block text-surface-light mb-2 text-sm">Descripción *</label>
                <div class="relative">
                  <textarea 
                    id="descripcion" 
                    name="descripcion" 
                    required
                    rows="5"
                    maxlength="1000"
                    class="w-full px-4 py-3 bg-black/20 border border-white/10 rounded-xl text-surface-light placeholder:text-surface-light/50 focus:ring-2 focus:ring-accent/50 focus:outline-none resize-none transition-all duration-300"
                    placeholder="Describe tus servicios, características y lo que te hace especial..."
                  ></textarea>
                  <div class="error-message hidden absolute -bottom-5 left-0 text-xs text-red-400 mt-1 flex items-center">
                    <AlertCircle size={12} class="mr-1" />
                    <span>Este campo es obligatorio</span>
                  </div>
                </div>
                <div class="flex justify-between mt-3">
                  <p class="text-surface-light/60 text-xs">Máximo 1000 caracteres</p>
                  <p class="text-surface-light/60 text-xs"><span id="descripcion-count">0</span>/1000</p>
                </div>
              </div>
              
              <div>
                <label class="block text-surface-light mb-3 text-sm">Fotos (Máximo 5) *</label>
                <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4 md:gap-6">
                  {Array.from({ length: 5 }).map((_, i) => (
                    <div class="relative aspect-[3/4] bg-black/20 border border-white/10 rounded-xl overflow-hidden flex flex-col items-center justify-center cursor-pointer hover:bg-black/30 transition-colors group">
                      <input 
                        type="file" 
                        id={`foto-${i+1}`} 
                        name={`foto-${i+1}`} 
                        accept="image/*" 
                        class="absolute inset-0 opacity-0 cursor-pointer z-10"
                        required={i === 0}
                      >
                      <div class="absolute inset-0 bg-accent/0 group-hover:bg-accent/10 transition-colors duration-300"></div>
                      <Camera size={32} class="text-accent/70 mb-2 group-hover:scale-110 transition-transform duration-300" />
                      <span class="text-surface-light/70 text-sm group-hover:text-surface-light transition-colors duration-300">{i === 0 ? 'Foto principal *' : `Foto ${i+1}`}</span>
                      <div class="error-message hidden absolute bottom-2 left-0 right-0 text-xs text-center text-red-400 mt-1 bg-black/50 py-1">
                        <span>Foto principal requerida</span>
                      </div>
                    </div>
                  ))}
                </div>
                <p class="text-surface-light/60 text-xs mt-2">La primera foto es obligatoria y será la imagen principal de tu perfil</p>
              </div>
            </div>
          </div>
          
          <!-- Previsualización del perfil -->
          <div class="mb-12 border border-white/10 rounded-xl p-6 bg-black/20">
            <h2 class="text-2xl font-display text-surface-light mb-6 flex items-center">
              <CheckCircle size={24} class="text-accent mr-3" />
              Previsualización de tu Perfil
            </h2>
            
            <div class="flex flex-col md:flex-row gap-6">
              <div class="w-full md:w-1/3 aspect-[3/4] bg-black/30 rounded-xl overflow-hidden relative flex items-center justify-center">
                <div id="preview-image" class="absolute inset-0 bg-cover bg-center"></div>
                <div id="no-preview" class="text-surface-light/50 text-center p-4">
                  <Camera size={40} class="mx-auto mb-2 text-accent/50" />
                  <p>Tu foto principal aparecerá aquí</p>
                </div>
              </div>
              
              <div class="w-full md:w-2/3">
                <h3 id="preview-title" class="text-xl font-display text-surface-light mb-2">Tu título aparecerá aquí</h3>
                <div class="flex items-center gap-2 text-surface-light/70 text-sm mb-4">
                  <MapPin size={14} class="text-accent" />
                  <span id="preview-location">Ubicación</span>
                  <span class="w-1 h-1 rounded-full bg-white/30"></span>
                  <span id="preview-service">Tipo de servicio</span>
                </div>
                <p id="preview-description" class="text-surface-light/70 text-sm line-clamp-4">Tu descripción aparecerá aquí...</p>
              </div>
            </div>
          </div>
          
          <!-- Botones de acción -->
          <div class="flex flex-col sm:flex-row items-center justify-between gap-4 mt-10">
            <a href="/anunciate-gratis" class="btn-secondary py-3 px-6 rounded-lg flex items-center justify-center gap-2 w-full sm:w-auto transition-all duration-300 hover:bg-white/5">
              <ChevronLeft size={18} />
              <span>Volver</span>
            </a>
            
            <button type="submit" class="btn-accent py-3 px-8 rounded-lg flex items-center justify-center gap-2 w-full sm:w-auto transition-all duration-300 hover:scale-105 shadow-lg shadow-accent/20">
              <span>Crear Perfil</span>
              <ChevronRight size={18} />
            </button>
          </div>
        </form>
      </div>
    </div>
  </main>
  
  <!-- Footer -->
  <Footer />
</Layout>

<script>
  // Validación del formulario
  const form = document.getElementById('profile-form') as HTMLFormElement;
  const requiredInputs = document.querySelectorAll('[required]') as NodeListOf<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>;
  
  // Función para validar fecha de nacimiento (mayor de 18 años)
  function validarEdad(fechaNacimiento: string): boolean {
    const hoy = new Date();
    const fechaNac = new Date(fechaNacimiento);
    let edad = hoy.getFullYear() - fechaNac.getFullYear();
    const mes = hoy.getMonth() - fechaNac.getMonth();
    
    if (mes < 0 || (mes === 0 && hoy.getDate() < fechaNac.getDate())) {
      edad--;
    }
    
    return edad >= 18;
  }
  
  // Validar cada campo cuando pierde el foco
  requiredInputs.forEach(input => {
    input.addEventListener('blur', function(this: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) {
      validarCampo(this);
    });
    
    input.addEventListener('input', function(this: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) {
      // Ocultar mensaje de error cuando el usuario comienza a escribir
      const errorMessage = this.parentElement?.querySelector('.error-message');
      if (errorMessage) {
        errorMessage.classList.add('hidden');
      }
      
      // Actualizar contadores de caracteres
      if (this.id === 'titulo-anuncio') {
        const counter = document.getElementById('titulo-count');
        if (counter) counter.textContent = this.value.length.toString();
      }
      
      if (this.id === 'descripcion') {
        const counter = document.getElementById('descripcion-count');
        if (counter) counter.textContent = this.value.length.toString();
      }
      
      // Actualizar previsualización
      actualizarPrevisualizacion();
    });
  });
  
  // Función para validar un campo específico
  function validarCampo(campo: HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement) {
    const errorMessage = campo.parentElement?.querySelector('.error-message');
    
    if (!errorMessage) return;
    
    // Validación específica por tipo de campo
    if (campo.id === 'fecha-nacimiento' && campo.value) {
      if (!validarEdad(campo.value)) {
        errorMessage.classList.remove('hidden');
        return false;
      }
    } else if (campo.id === 'email' && campo.value) {
      const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailRegex.test(campo.value)) {
        errorMessage.classList.remove('hidden');
        return false;
      }
    } else if (campo.id === 'telefono' && campo.value) {
      const phoneRegex = /[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}/;
      if (!phoneRegex.test(campo.value)) {
        errorMessage.classList.remove('hidden');
        return false;
      }
    } else if (campo.id === 'foto-1') {
      const inputElement = campo as HTMLInputElement;
      if (!inputElement.files || inputElement.files.length === 0) {
        errorMessage.classList.remove('hidden');
        return false;
      }
    } else if (!campo.value) {
      errorMessage.classList.remove('hidden');
      return false;
    }
    
    errorMessage.classList.add('hidden');
    return true;
  }
  
  // Validar todo el formulario al enviar
  if (form) {
    form.addEventListener('submit', function(e) {
      e.preventDefault();
      
      let formValido = true;
      
      // Validar todos los campos
      requiredInputs.forEach(input => {
        if (!validarCampo(input)) {
          formValido = false;
        }
      });
      
      if (formValido) {
        // Aquí iría la lógica para enviar el formulario
        // Por ahora, simularemos un envío exitoso
        
        // Mostrar mensaje de éxito
        alert('¡Perfil creado con éxito! Pronto revisaremos tu información y activaremos tu perfil.');
        
        // Redirigir a una página de confirmación (se podría crear después)
        window.location.href = '/';
      } else {
        // Scroll al primer campo con error
        const primerError = document.querySelector('.error-message:not(.hidden)');
        if (primerError) {
          primerError.scrollIntoView({ behavior: 'smooth', block: 'center' });
        }
      }
    });
  }
  
  // Previsualización de imágenes
  const fileInputs = document.querySelectorAll<HTMLInputElement>('input[type="file"]');
  
  fileInputs.forEach(input => {
    input.addEventListener('change', function(this: HTMLInputElement) {
      if (this.files && this.files[0]) {
        const reader = new FileReader();
        const container = this.parentElement;
        
        if (!container) return;
        
        reader.onload = function(e: ProgressEvent<FileReader>) {
          if (!container || !e.target || !e.target.result) return;
          
          // Eliminar contenido previo excepto el input
          const inputFile = container.querySelector('input[type="file"]');
          const errorMessage = container.querySelector('.error-message');
          
          while (container.firstChild) {
            if (container.firstChild === inputFile || container.firstChild === errorMessage) {
              break;
            } else {
              container.removeChild(container.firstChild);
            }
          }
          
          // Crear imagen de vista previa
          const img = document.createElement('img');
          img.src = e.target.result as string;
          img.classList.add('absolute', 'inset-0', 'w-full', 'h-full', 'object-cover', 'z-0');
          
          // Añadir overlay para efecto hover
          const overlay = document.createElement('div');
          overlay.classList.add('absolute', 'inset-0', 'bg-black/30', 'opacity-0', 'hover:opacity-100', 'transition-opacity', 'duration-300', 'flex', 'items-center', 'justify-center', 'z-5');
          
          const changeText = document.createElement('span');
          changeText.textContent = 'Cambiar foto';
          changeText.classList.add('text-white', 'text-sm', 'font-medium');
          
          overlay.appendChild(changeText);
          
          // Añadir elementos al contenedor
          container.insertBefore(img, inputFile);
          container.insertBefore(overlay, inputFile);
          
          // Actualizar previsualización si es la foto principal
          if (input.id === 'foto-1') {
            actualizarPrevisualizacion();
          }
        };
        
        reader.readAsDataURL(this.files[0]);
      }
    });
  });
  
  // Actualizar previsualización del perfil
  function actualizarPrevisualizacion() {
    const previewTitle = document.getElementById('preview-title');
    const previewDescription = document.getElementById('preview-description');
    const previewLocation = document.getElementById('preview-location');
    const previewService = document.getElementById('preview-service');
    const previewImage = document.getElementById('preview-image');
    const noPreview = document.getElementById('no-preview');
    
    // Actualizar título
    const tituloInput = document.getElementById('titulo-anuncio') as HTMLInputElement;
    if (previewTitle && tituloInput.value) {
      previewTitle.textContent = tituloInput.value;
    } else if (previewTitle) {
      previewTitle.textContent = 'Tu título aparecerá aquí';
    }
    
    // Actualizar descripción
    const descripcionInput = document.getElementById('descripcion') as HTMLTextAreaElement;
    if (previewDescription && descripcionInput.value) {
      previewDescription.textContent = descripcionInput.value;
    } else if (previewDescription) {
      previewDescription.textContent = 'Tu descripción aparecerá aquí...';
    }
    
    // Actualizar ubicación
    const regionSelect = document.getElementById('region') as HTMLSelectElement;
    const comunaSelect = document.getElementById('comuna') as HTMLSelectElement;
    if (previewLocation) {
      if (regionSelect.value && comunaSelect.value) {
        previewLocation.textContent = `${comunaSelect.options[comunaSelect.selectedIndex].text}, ${regionSelect.options[regionSelect.selectedIndex].text}`;
      } else if (regionSelect.value) {
        previewLocation.textContent = `${regionSelect.options[regionSelect.selectedIndex].text}`;
      } else {
        previewLocation.textContent = 'Ubicación';
      }
    }
    
    // Actualizar tipo de servicio
    const servicioSelect = document.getElementById('tipo-servicio') as HTMLSelectElement;
    if (previewService && servicioSelect.value) {
      previewService.textContent = servicioSelect.options[servicioSelect.selectedIndex].text;
    } else if (previewService) {
      previewService.textContent = 'Tipo de servicio';
    }
    
    // Actualizar imagen
    const fotoInput = document.getElementById('foto-1') as HTMLInputElement;
    if (previewImage && fotoInput.files && fotoInput.files[0]) {
      const reader = new FileReader();
      
      reader.onload = function(e) {
        if (previewImage && e.target && e.target.result) {
          previewImage.style.backgroundImage = `url(${e.target.result})`;
          if (noPreview) noPreview.style.display = 'none';
        }
      };
      
      reader.readAsDataURL(fotoInput.files[0]);
    }
  }
  
  // Cargar comunas según la región seleccionada
  const regionSelect = document.getElementById('region') as HTMLSelectElement;
  const comunaSelect = document.getElementById('comuna') as HTMLSelectElement;
  
  if (regionSelect && comunaSelect) {
    const comunasPorRegion: {[key: string]: string[]} = {
      'metropolitana': ['Santiago Centro', 'Providencia', 'Las Condes', 'Vitacura', 'Ñuñoa', 'La Florida', 'Maipú'],
      'valparaiso': ['Valparaíso', 'Viña del Mar', 'Concón', 'Quilpué', 'Villa Alemana'],
      'biobio': ['Concepción', 'Talcahuano', 'San Pedro de la Paz', 'Chiguayante', 'Los Ángeles'],
      'coquimbo': ['La Serena', 'Coquimbo', 'Ovalle', 'Illapel'],
      'antofagasta': ['Antofagasta', 'Calama', 'Tocopilla', 'Mejillones']
    };
    
    regionSelect.addEventListener('change', function() {
      // Limpiar select de comunas
      while (comunaSelect.options.length > 1) {
        comunaSelect.remove(1);
      }
      
      // Habilitar select de comunas
      comunaSelect.disabled = false;
      
      // Cargar comunas según la región seleccionada
      const region = this.value;
      if (region && comunasPorRegion[region]) {
        comunasPorRegion[region].forEach(comuna => {
          const option = document.createElement('option');
          option.value = comuna.toLowerCase().replace(/\s+/g, '');
          option.textContent = comuna;
          comunaSelect.appendChild(option);
        });
      }
      
      // Actualizar previsualización
      actualizarPrevisualizacion();
    });
    
    comunaSelect.addEventListener('change', function() {
      actualizarPrevisualizacion();
    });
  }
  
  // Inicializar contadores
  document.addEventListener('DOMContentLoaded', function() {
    const tituloInput = document.getElementById('titulo-anuncio') as HTMLInputElement;
    const descripcionInput = document.getElementById('descripcion') as HTMLTextAreaElement;
    const tituloCount = document.getElementById('titulo-count');
    const descripcionCount = document.getElementById('descripcion-count');
    
    if (tituloInput && tituloCount) {
      tituloCount.textContent = tituloInput.value.length.toString();
    }
    
    if (descripcionInput && descripcionCount) {
      descripcionCount.textContent = descripcionInput.value.length.toString();
    }
  });
</script>

<style>
  .glass-panel {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(20px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  .bg-select-arrow {
    background-image: url("data:image/svg+xml;charset=UTF-8,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24' fill='none' stroke='white' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3e%3cpolyline points='6 9 12 15 18 9'%3e%3c/polyline%3e%3c/svg%3e");
    background-repeat: no-repeat;
    background-position: right 1rem center;
    background-size: 1em;
    padding-right: 2.5rem;
  }
  
  /* Botón con efecto de brillo */
  .btn-accent {
    @apply bg-accent text-white font-medium relative overflow-hidden;
    transition: all 0.3s ease;
  }
  
  .btn-accent:hover {
    @apply bg-accent/90;
  }
  
  .btn-accent:before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
      to bottom right,
      rgba(255, 255, 255, 0) 0%,
      rgba(255, 255, 255, 0.1) 100%
    );
    transform: rotate(45deg);
    transition: all 0.3s ease;
    opacity: 0;
  }
  
  .btn-accent:hover:before {
    opacity: 1;
  }
  
  .btn-secondary {
    @apply bg-transparent border border-accent/50 text-surface-light font-medium relative overflow-hidden;
  }
  
  /* Animación de focus para inputs */
  input:focus, textarea:focus, select:focus {
    animation: pulse 1.5s infinite;
  }
  
  @keyframes pulse {
    0% {
      box-shadow: 0 0 0 0 rgba(var(--color-accent-rgb), 0.4);
    }
    70% {
      box-shadow: 0 0 0 5px rgba(var(--color-accent-rgb), 0);
    }
    100% {
      box-shadow: 0 0 0 0 rgba(var(--color-accent-rgb), 0);
    }
  }
</style>